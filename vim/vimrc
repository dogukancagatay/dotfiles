" Written by Aron Griffis <agriffis@gentoo.org>
" Modified by Ryan Phillips <rphillips@gentoo.org>
" Added Redhat's vimrc info by Seemant Kulleen <seemant@gentoo.org>
" Added some enhancements by A. Murat Eren <meren@uludag.org.tr>
" Tidy up by Onur Küçük <onur@pardus.org.tr>
" Some good stuff is taken from Derek Wyatt's Vim Configuration <http://github.com/derekwyatt>
" Some more good stuff is taken from Fatih Arslan's Vim Configuration <http://github.com/farslan>
" Bundled and modified by Doğukan Çağatay <http://github.com/dogukancagatay>

" Use Vim settings, rather than Vi settings (much better!).
" This must be first, because it changes other options as a side effect.
set nocompatible
set backspace=2         " same as :set backspace=indent,eol,start

" Activate pathogen
call pathogen#infect()

" Indentation settings
set autoindent          " Always set auto-indenting on
set tabstop=4
set shiftwidth=4

" add a newline after each occurrence of the last search term
nnoremap SS :%s//&\r/<CR>

" Vi is cooler with these settings :)
set sta
set sts=4
set noexpandtab

set viminfo='20,\"50    " Read/write a .viminfo file -- limit to only 50
set history=100         " Keep 100 lines of command history
set ruler               " Show the cursor position all the time
set showmode            " Show current mode

" Set syntax coloring on
syntax enable
filetype on
filetype plugin on
filetype indent on
set grepprg=grep\ -nH\ $*   " for vim-latex
set term=screen-256color        " Powerline doesn't show colors on status bar otherwise

" Search options
set showmatch
set incsearch           " shows matching while typing
set ignorecase
set hlsearch            " highlight found searches

" Encoding options
set encoding=utf8
set tenc=utf8
set fileencoding=utf8
set fileformats=unix,dos,mac    " Prefer unix over windows over os9 formats

set wrap                " wrap long lines to windows width by word
set number              " show line numbers
set linebreak
set laststatus=2
set showcmd             " shows what you are typing as a command
set wildmenu            " Make the command-line completion better
set showfulltag         " When completing by tag, show the whole tag, not just the function name
set autoread            " Automatically read a file that has changed on disk
set splitright          " Split vertical windows right to the current windows
set splitbelow          " Split horizontal windows below to the current windows
set mat=5               " show matching for an half sec

set mouse=a             " Use mouse wheel to scroll up/down

" Theme settings
" colorscheme elflord
colorscheme monokai
set background=dark
if has("gui_running")
    let g:molokai_original = 1
else
    let g:rehash256 = 1
endif

" Disable modeline support
"set modelines=0
"set nomodeline

" crontab fix for Mac OS X
if $VIM_CRONTAB == "true"
    set nobackup
    set nowritebackup
endif

" The following changes the default filetype back to 'tex':
let g:tex_flavor='latex'

" disable consealing json double-quotes
let g:vim_json_syntax_conceal = 0

" make vim save and load the folding of the document each time it loads
" also places the cursor in the last place that it was left.
set viewdir=/tmp
au BufWinLeave * silent! mkview
au BufWinEnter * silent! loadview

" Activate undo
set undofile
set undodir=/tmp
set nobackup            " Don't create anoying backup files

" Setup vim-script-runner
let g:script_runner_key = '<F5>'

" nerdtree options
"autocmd vimenter * NERDTree " auto open nerdtree
autocmd vimenter * NERDTreeTabsToggle " auto open nerdtree
autocmd vimenter * wincmd l " auto open nerdtree
" when quit from the last buffer nerdtree quits too
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" vim-airline settings
let g:airline#extensions#tabline#enabled = 1

" vim-gitgutter settings
set updatetime=250

" Cool tab completion stuff
set wildmenu
set wildmode=list:longest,full

" #####################
" # Mappings
" ####################

"Getting sudo rights from inside of vim
command W w !sudo tee % >/dev/null

" This comes first, because there are mappings that depend on leader
let mapleader = ","
let g:mapleader = ","

" CTRL+N x2 shows line numbers
nmap <C-N><C-N> :set invnumber <CR>

" open spell checker
map <leader>ss :setlocal spell! <CR><CR>

" Enables to move upward/downward at long lines
map <UP> gk
map <DOWN> gj
map k gk
map j gj

" Tab controls
nmap <leader>t :tabnew<CR>
nmap <leader>n :tabprevious<CR>
nmap <leader>m :tabnext<CR>

" CtrlP leader mappings
nmap <leader>f :CtrlPMixed<CR>

" force close/write and close
nmap <leader>q :q!<CR>
nmap <leader>qa :qa!<CR>
nmap <leader>wq :wq!<CR>
nmap <leader>wqa :wqa!<CR>
nmap <leader>w :w<CR>

" toggle paste mode with leader + p
nmap <leader>p :set paste!<CR>

" nerdcommenter
nmap <leader>cc NERDComToggleComment

" nerdtree
nmap <Leader>b <plug>NERDTreeTabsToggle<CR>

" Enable extended regex vim search
nnoremap / /\v
vnoremap / /\v

" compile and run single java files
map <F9> :w<CR>:set makeprg=javac\ %<CR>:make<CR>
map <F10> :!echo %\|awk -F. '{print $1}'\|xargs java<CR>

" Substitution function for Turkish characters with Latex Turkish characters
function! Tr_char_to_latex()
    :%s/ğ\|Ğ\|ç\|Ç\|ş\|Ş\|ü\|Ü\|ö\|Ö\|ı\|İ/\={'ğ':'\u{g}','Ğ':'\u{G}','ç':'\c{c}','Ç':'\c{C}','ş':'\c{s}','Ş':'\c{S}','ü':'\"{u}','Ü':'\"{U}','ö':'\"{o}','Ö':'\"{O}','ı':'{\i}','İ':'\.{I}'}[submatch(0)]/g
endfunction

" Changes file encoding to utf-8 and file format to unix
function! Dos2unix()
    :set fileformat=unix | set fileencoding=utf8 | %s///g
endfunction

" Prettify JSON file
function! JsonPrettyfy()
    :%!python -m json.tool
endfunction

" Fix for corrupted Turkish characters because of encoding changes
function! Tr_char_fix()
    :call Dos2unix() | %s/Ý\|ý\|Þ\|þ\|Ð\|ð/\={'ð':'ğ','Ð':'Ğ','þ':'ş','Þ':'Ş','ý':'ı','Ý':'İ'}[submatch(0)]/g
endfunction

autocmd FileType sml setlocal makeprg=sml\ '%'
